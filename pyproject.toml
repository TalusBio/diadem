[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "diadem"
authors = [
    {name = "Sebastian Paez", email = "spaez@talus.bio"},
    {name = "Carollyn Allen", email = "callen@talus.bio"},
    {name = "William E. Fondrie", email = "wfrondie@talus.bio"},
]
description = "A modular, feature-centric toolkit for DIA proteomics"
requires-python = ">=3.9,<3.11"
keywords = ["proteomics", "dia", "mass spec"]
license = {text = "Apache 2.0"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "pandas >= 2.0.0",
    "numpy == 1.23.5", # Pinned because of numba
    "ms2ml >= 0.0.35",
    "tqdm >= 4.64.1",
    "loguru >= 0.6.0",
    "rich-click >= 1.6.0",
    "fastparquet >= 2022.11.0",
    "pyarrow >= 10.0.1",
    "platformdirs >= 2.6.0",
    "joblib >= 1.2.0",
    "mokapot >= 0.9.1",
    "alphatims >= 1.0.6",
    "hdf5plugin",
    "polars >= 0.16.9",
    "torch >= 2.0.0",
    "scikit-learn >= 1.2.2"
]
dynamic = ["version"]

[project.scripts]
diadem = "diadem.cli:main_cli"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/wfondrie/diadem"
Documentation = "https://TalusBio.github.io/diadem"

[project.optional-dependencies]
test = [
    "pytest >= 7.2.0",
    "pytest-datadir >= 1.4.1",
    "pytest-cov >= 4.0.0",
]
profiling = [
    "line_profiler",
]
plot = [
    "matplotlib",
    "vizta",
]
dev = [
    "ruff >= 0.0.253",
    "black >= 23.1.0",
    "isort >=  5.12.0",
    "pylance >= 0.3.9",
]


[tool.setuptools.packages.find]
include = ["diadem"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules -v"
doctest_optionflags = "NORMALIZE_WHITESPACE"
testpaths = [
    "diadem",
    "tests",
]

[tool.ruff]
line-length = 88
select = ["E", "F", "B","W", "C", "I", "D", "UP", "N", "ANN", "T20", "COM"]
target-version = "py39"

# ANN101 Missing type annotation for `self` in method
# D213 Multi-line docstring summary should start at the second lin
# D203 1 blank line required before class docstring
# D100 Missing docstring in public module
# ANN102 Missing type annotation for `cls` in classmethod
# D401 First line of docstring should be in imperative mood
ignore = ["D213", "ANN101", "D203", "D100", "ANN102", "D401"]

fix = true

[tool.ruff.per-file-ignores]
"*tests/*.py" = ["ANN"]
# D104 is missing docstring in public package
"**__init__.py" = ["D104"]
# Implements a sklearn interface with X and X_hat variables/params.
"diadem/aggregate/rt_model.py" = ["N803", "N806"]

# ANN001 Missing type annotation for function argument
# Ignoring in the cli since it is redundant with the click options
# D103 Missing docstring in public function
# Information in the help of the click command.
"diadem/cli.py" = ["ANN001", "D103"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310']
preview = true

[tool.isort]
profile = "black"
